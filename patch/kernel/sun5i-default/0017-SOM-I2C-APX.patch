diff --git a/arch/arm/plat-sunxi/include/plat/i2c.h b/arch/arm/plat-sunxi/include/plat/i2c.h
index be8fe41..d75347b 100644
--- a/arch/arm/plat-sunxi/include/plat/i2c.h
+++ b/arch/arm/plat-sunxi/include/plat/i2c.h
@@ -194,10 +194,10 @@ Foscl is clock SCL;standard mode:100KHz or fast mode:400KHz
 #define TWI4_BASE_ADDR_END    (TWI4_BASE_ADDR_START + AW_TWI_ADDR_SIZE)
 
 #define I2C0_TRANSFER_SPEED     (400000)
-#define I2C1_TRANSFER_SPEED     (200000)
-#define I2C2_TRANSFER_SPEED     (200000)
-#define I2C3_TRANSFER_SPEED     (200000)
-#define I2C4_TRANSFER_SPEED     (200000)
+#define I2C1_TRANSFER_SPEED     (100000)
+#define I2C2_TRANSFER_SPEED     (100000)
+#define I2C3_TRANSFER_SPEED     (100000)
+#define I2C4_TRANSFER_SPEED     (100000)
 
 struct sunxi_i2c_platform_data {
 	int 		 bus_num;
diff --git a/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c b/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c
index 846a01f..b0cc801 100644
--- a/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c
+++ b/drivers/usb/sunxi_usb/hcd/hcd0/sw_hcd0.c
@@ -32,8 +32,13 @@
 #include <linux/clk.h>
 #include <linux/io.h>pat
 #include <linux/gpio.h>
-#include "../../../../power/axp_power/axp-gpio.h"
+#if defined(CONFIG_AW_AXP) || \
+    (defined(CONFIG_FB_SUNXI_MODULE) && defined(CONFIG_AW_AXP_MODULE))
 
+	#include "../../../../power/axp_power/axp-gpio.h"
+#else	
+	#warning("Building w/o AXP !!\n");
+#endif
 #include  <mach/clock.h>
 #include  "../include/sw_hcd_config.h"
 #include  "../include/sw_hcd_core.h"
@@ -427,13 +432,17 @@ static __s32 pin_init(sw_hcd_io_t *sw_hcd_io)
 	if (sw_hcd_io->drv_vbus_gpio_set.port == 0xffff) {    /* power */
 		if (sw_hcd_io->drv_vbus_gpio_set.mul_sel == 0 ||
 				sw_hcd_io->drv_vbus_gpio_set.mul_sel == 1) {
+#ifdef SUNXI_USE_AXP_GPIO
 			axp_gpio_set_io(sw_hcd_io->drv_vbus_gpio_set.port_num,
 					sw_hcd_io->drv_vbus_gpio_set.mul_sel);
 			axp_gpio_set_value(
 					sw_hcd_io->drv_vbus_gpio_set.port_num,
 					!sw_hcd_io->drv_vbus_gpio_set.data);
-
+			
 			return 100 + sw_hcd_io->drv_vbus_gpio_set.port_num;
+#else 
+				return 0;
+#endif
 		} else {
 			DMSG_PANIC("ERR: unkown gpio mul_sel(%d)\n",
 					sw_hcd_io->drv_vbus_gpio_set.mul_sel);
@@ -480,11 +489,16 @@ static __s32 pin_exit(sw_hcd_io_t *sw_hcd_io)
 {
 	if (sw_hcd_io->Drv_vbus_Handle) {
 		if (sw_hcd_io->drv_vbus_gpio_set.port == 0xffff) { /* power */
+#ifdef SUNXI_USE_AXP_GPIO
+
 			axp_gpio_set_io(sw_hcd_io->drv_vbus_gpio_set.port_num,
 					sw_hcd_io->drv_vbus_gpio_set.mul_sel);
 			axp_gpio_set_value(
 					sw_hcd_io->drv_vbus_gpio_set.port_num,
 					sw_hcd_io->drv_vbus_gpio_set.data);
+#else			
+			DMSG_INFO("AXP Disabled \n");
+#endif
 		} else {
 	gpio_release(sw_hcd_io->Drv_vbus_Handle, 0);
 		}
@@ -551,8 +565,12 @@ static void sw_hcd_board_set_vbus(struct sw_hcd *sw_hcd, int is_on)
 	if (is_on && hcd0_set_vbus_cnt == 1) {
 		DMSG_INFO("[%s]: Set USB Power On\n", sw_hcd->driver_name);
 		if (sw_hcd->sw_hcd_io->drv_vbus_gpio_set.port == 0xffff)
-			axp_gpio_set_value(hcd_io->drv_vbus_gpio_set.port_num,
-					on_off);
+#ifdef SUNXI_USE_AXP_GPIO
+			axp_gpio_set_value(hcd_io->drv_vbus_gpio_set.port_num,	on_off);
+#else
+
+			DMSG_INFO("AXP Disabled \n");
+#endif
 		else
 			gpio_write_one_pin_value(hcd_io->Drv_vbus_Handle,
 					on_off, NULL);
@@ -562,8 +580,12 @@ static void sw_hcd_board_set_vbus(struct sw_hcd *sw_hcd, int is_on)
 	} else if (!is_on && hcd0_set_vbus_cnt == 0) {
 		DMSG_INFO("[%s]: Set USB Power Off\n", sw_hcd->driver_name);
 		if (sw_hcd->sw_hcd_io->drv_vbus_gpio_set.port == 0xffff)
-			axp_gpio_set_value(hcd_io->drv_vbus_gpio_set.port_num,
-					on_off);
+	#ifdef SUNXI_USE_AXP_GPIO
+		axp_gpio_set_value(hcd_io->drv_vbus_gpio_set.port_num,	on_off);
+	#else
+		DMSG_INFO("AXP Disabled !!! \n");
+	#endif
+	 		
 		else
 			gpio_write_one_pin_value(hcd_io->Drv_vbus_Handle,
 					on_off, NULL);

